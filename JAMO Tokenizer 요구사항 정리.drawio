<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/136.0.0.0 Safari/537.36 Edg/136.0.0.0" version="27.1.4">
  <diagram name="페이지-1" id="XED0V5c5DHZcUICSy-Oq">
    <mxGraphModel dx="1418" dy="794" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="_l-ZRb8BGKj7TKWA02cw-1" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;JAMO Tokenizer 기능적 요구사항&lt;/b&gt;&lt;/span&gt;&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;font style=&quot;font-size: 11px;&quot;&gt;자모 형태로 분해(tokenize) 와 재결합(combine)을 진행.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 11px;&quot;&gt;모든 tokenize는 각 char를 [ &amp;lt;jamo&amp;gt;,&amp;lt;jamo&amp;nbsp;| padding&amp;nbsp;&amp;gt;,&amp;lt;jamo | padding &amp;gt;&amp;nbsp;](이하 JAMO format) 형태로 출력&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 11px;&quot;&gt;tokenize된 요소를 실수로 변환하는 encoding 구현&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 11px;&quot;&gt;encoding된 요소를 다시 token으로 변환하는 decoding 구현&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;사전 준비된 vocab을 load하고 export 해야함&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;새로운 vocab을 생성하고, vocab을 관리( 추가, 생성, 삭제 )할 수 있어야함.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;Tokenizer는 Jamo format을 준수하며 각 메서드를 처리하나 사용자는 임의로 Tokenizer 구조체 생성 시 property에 bool 타입의 입력값을 통해 비활성화(padding 비적용 tokenize)를 할 수 있다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;Tokenizer에는 compute 또는 train의 2가지 모드로 구성된다.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="160" y="80" width="600" height="160" as="geometry" />
        </mxCell>
        <mxCell id="Y6aRFfN4-ktlN3rKQ5mH-1" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;JAMO Tokenizer 비기능적 요구사항&lt;/b&gt;&lt;/span&gt;&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;font style=&quot;font-size: 11px;&quot;&gt;tokenize에는 padding이 존재할 시 명시적으로 작성해야 한다.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 11px;&quot;&gt;JAMO format으로 변환할 때 항상 첫번째 요소는 무조건 존재하여야 한다.&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;font style=&quot;font-size: 11px;&quot;&gt;combine 작업은 jamo format으로 tokenize된 백터열만 가능하다. ( 초성, 중성, 종성의 구조의 일관성 유지하여 명확한 결합 진행 )&lt;/font&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;Jamo format 사용 결정 여부는 기본적으로 True이며 False를 적용하기 위해서는 초기 구조체 생성 시 필드값으로 정하여야 하며 이는 불변(immutable)이여야 한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;compute 모드는 처리 데이터를 제외한 모든 필드 변수가&amp;nbsp;불변(immutable)이여야 한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;train 모드는 vocab과 이여야 한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;모델의 vocab은 기본적으로 immutable이여야 하나 vocab에 token을 추가하고, vocab을 제거하는 과정을 진행할 때는 Train Mode로 변경하여 진행하여야 한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;Train Mode에서 compute mode 전환 시 기존의 field를 상속 받아 새로운 인스턴스를 출력한다. ( 무결성 유지 )&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="160" y="240" width="600" height="190" as="geometry" />
        </mxCell>
        <mxCell id="VKXjKcnUw0s6IL6_mVm_-1" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;&lt;b&gt;단일 처리 Tokenizer 요규사항&amp;nbsp;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="160" y="40" width="600" height="30" as="geometry" />
        </mxCell>
        <mxCell id="VKXjKcnUw0s6IL6_mVm_-2" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;&lt;b&gt;병렬 처리 Tokenizer 요규사항&amp;nbsp;&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="130" y="570" width="600" height="30" as="geometry" />
        </mxCell>
        <mxCell id="VKXjKcnUw0s6IL6_mVm_-3" value="&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;b&gt;기타&lt;/b&gt;&lt;/span&gt;&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;tokenizer의 tokenize, encode, decode, compute, train은 병렬 처리를 위해 각각의 기능과 함수를 컴포넌트화 하여 종속성을 최소화한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;병렬 처리를 위해 data를 chunk로 분활하여 계산할 수 있도록 지정한다.&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;병렬 처리를 진행할 시 chunk 관리 클래스를 새롭게 정의해야 하며, 한번에 모든 데이터를 업로드 하는 것이 아닌 chunk 단위로 업로드를 진행한다. (chunk는 data size를 기준으로 분활되며 마지막 문장이 끝나기 전 경계 도달 시 해당 문장은 다음 청크로 넘어간다.)&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-size: 11px;&quot;&gt;data는 stream 형태로 읽어들이며 utf-8을 기준으로 처리한다.&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="160" y="440" width="600" height="140" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
